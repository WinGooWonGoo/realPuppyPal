{"ast":null,"code":"var _jsxFileName = \"/Users/gogowon97/Documents/pyppypal/frontend/src/Behavior.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './Behavior.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Behavior = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dog = location.state.dog; // URL에서 state를 통해 전달된 dog 객체를 가져옵니다.\n\n  const [selectedVideo, setSelectedVideo] = useState(null); // 사용자가 선택한 비디오 파일을 저장합니다.\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false); // 업로드 확인 모달의 표시 여부를 결정합니다.\n  const [uploading, setUploading] = useState(false); // 업로드 중 상태를 나타냅니다.\n\n  // 비디오 파일을 선택할 때 실행될 함수입니다.\n  const handleVideoUpload = event => {\n    setSelectedVideo(event.target.files[0]); // 선택된 파일을 상태에 저장합니다.\n    setShowConfirmationModal(true); // 확인 모달을 표시합니다.\n  };\n\n  // 비디오 파일을 서버로 업로드하는 함수입니다.\n  const uploadVideoToServer = async file => {\n    const formData = new FormData();\n    formData.append('file', file); // FormData 객체에 파일을 추가합니다.\n\n    // 로컬 서버로의 요청을 시도하는 함수\n    const tryUploadToLocalServer = async () => {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        mode: 'cors',\n        body: formData\n      });\n      return response;\n    };\n\n    // Cloud 서버로의 요청을 시도하는 함수\n    const tryUploadToCloudServer = async () => {\n      const response = await fetch('/cloudapi/upload', {\n        method: 'POST',\n        mode: 'cors',\n        body: formData\n      });\n      return response;\n    };\n    try {\n      let response = await tryUploadToLocalServer();\n\n      // 로컬 서버 요청이 실패하면 Cloud 서버로 재시도\n      if (!response.ok) {\n        console.error('Upload to local server failed, trying cloud server');\n        response = await tryUploadToCloudServer();\n      }\n\n      // Cloud 서버 요청도 실패하면 에러 처리\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Upload successful:', data);\n      navigate('/Result', {\n        state: {\n          result: data,\n          dog: dog\n        }\n      }); // 결과 페이지로 이동합니다.\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert(\"업로드 실패\");\n    }\n  };\n\n  // 업로드를 확인하는 버튼을 클릭했을 때 실행될 함수입니다.\n  const handleConfirmUpload = () => {\n    if (selectedVideo) {\n      uploadVideoToServer(selectedVideo);\n    }\n    setShowConfirmationModal(false); // 모달을 닫습니다.\n    setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n  };\n\n  // 업로드 모달을 닫을 때 실행될 함수입니다.\n  const closeConfirmationModal = () => {\n    setShowConfirmationModal(false); // 모달을 닫습니다.\n    setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      onClick: () => navigate('/Home'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"dog\",\n        src: \"img/header.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [dog.name, \"\\uC758 \\uC601\\uC0C1\\uC744 \\uC5C5\\uB85C\\uB4DC \\uD574\\uC8FC\\uC138\\uC694\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"videoUpload\",\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleVideoUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          width: \"280\",\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: URL.createObjectURL(selectedVideo),\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"uploadbtn\",\n          onClick: () => setShowConfirmationModal(true),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), showConfirmationModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoModal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"first-element\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Confirm Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"first-element\",\n          children: \"Do you want to upload the selected video?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"second-element\",\n            onClick: handleConfirmUpload,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"third-element\",\n            onClick: closeConfirmationModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Uploading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Behavior, \"rhULXo6/+yZ30JdTbDfKW2x2SFg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Behavior;\nexport default Behavior;\nvar _c;\n$RefreshReg$(_c, \"Behavior\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","Behavior","_s","navigate","location","dog","state","selectedVideo","setSelectedVideo","showConfirmationModal","setShowConfirmationModal","uploading","setUploading","handleVideoUpload","event","target","files","uploadVideoToServer","file","formData","FormData","append","tryUploadToLocalServer","response","fetch","method","mode","body","tryUploadToCloudServer","ok","console","error","Error","status","data","json","log","result","alert","handleConfirmUpload","closeConfirmationModal","children","onClick","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","className","name","id","type","accept","onChange","controls","width","URL","createObjectURL","_c","$RefreshReg$"],"sources":["/Users/gogowon97/Documents/pyppypal/frontend/src/Behavior.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './Behavior.css';\n\nconst Behavior = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const dog = location.state.dog; // URL에서 state를 통해 전달된 dog 객체를 가져옵니다.\n\n    const [selectedVideo, setSelectedVideo] = useState(null); // 사용자가 선택한 비디오 파일을 저장합니다.\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false); // 업로드 확인 모달의 표시 여부를 결정합니다.\n    const [uploading, setUploading] = useState(false); // 업로드 중 상태를 나타냅니다.\n\n    // 비디오 파일을 선택할 때 실행될 함수입니다.\n    const handleVideoUpload = (event) => {\n        setSelectedVideo(event.target.files[0]); // 선택된 파일을 상태에 저장합니다.\n        setShowConfirmationModal(true); // 확인 모달을 표시합니다.\n    };\n\n    // 비디오 파일을 서버로 업로드하는 함수입니다.\n    const uploadVideoToServer = async (file) => {\n        const formData = new FormData();\n        formData.append('file', file); // FormData 객체에 파일을 추가합니다.\n    \n        // 로컬 서버로의 요청을 시도하는 함수\n        const tryUploadToLocalServer = async () => {\n            const response = await fetch('/api/upload', {\n                method: 'POST',\n                mode: 'cors',\n                body: formData,\n            });\n            return response;\n        };\n    \n        // Cloud 서버로의 요청을 시도하는 함수\n        const tryUploadToCloudServer = async () => {\n            const response = await fetch('/cloudapi/upload', {\n                method: 'POST',\n                mode: 'cors',\n                body: formData,\n            });\n            return response;\n        };\n    \n        try {\n            let response = await tryUploadToLocalServer();\n            \n            // 로컬 서버 요청이 실패하면 Cloud 서버로 재시도\n            if (!response.ok) {\n                console.error('Upload to local server failed, trying cloud server');\n                response = await tryUploadToCloudServer();\n            }\n    \n            // Cloud 서버 요청도 실패하면 에러 처리\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Upload successful:', data);\n            navigate('/Result', { state: { result: data, dog: dog } }); // 결과 페이지로 이동합니다.\n        } catch (error) {\n            console.error('Upload failed:', error);\n            alert(\"업로드 실패\");\n        }\n    };\n\n    // 업로드를 확인하는 버튼을 클릭했을 때 실행될 함수입니다.\n    const handleConfirmUpload = () => {\n        if (selectedVideo) {\n            uploadVideoToServer(selectedVideo);\n        }\n        setShowConfirmationModal(false); // 모달을 닫습니다.\n        setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n    };\n\n    // 업로드 모달을 닫을 때 실행될 함수입니다.\n    const closeConfirmationModal = () => {\n        setShowConfirmationModal(false); // 모달을 닫습니다.\n        setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n    };\n\n    return (\n        <div>\n            <header onClick={() => navigate('/Home')}>\n                <img alt=\"dog\" src=\"img/header.png\" />\n            </header>\n\n            <div className=\"video-upload\">\n                <p>{dog.name}의 영상을 업로드 해주세요</p>\n                <input id=\"videoUpload\" type=\"file\" accept=\"video/*\" onChange={handleVideoUpload} />\n                {selectedVideo && (\n                    <div>\n                        <video controls width=\"280\">\n                            <source src={URL.createObjectURL(selectedVideo)} type=\"video/mp4\" />\n                        </video>\n                        <button className=\"uploadbtn\" onClick={() => setShowConfirmationModal(true)}>Upload</button>\n                    </div>\n                )}\n            </div>\n\n            {showConfirmationModal && (\n                <div className=\"videoModal\">\n                    <div className=\"modal-cont\">\n                        <p className=\"first-element\"><b>Confirm Upload</b></p>\n                        <p className=\"first-element\">Do you want to upload the selected video?</p>\n                        <div className='confirmBtn'>\n                            <button className=\"second-element\" onClick={handleConfirmUpload}>Yes</button>\n                            <button className=\"third-element\" onClick={closeConfirmationModal}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {uploading && <div>Uploading...</div>}\n        </div>\n    );\n};\n\nexport default Behavior;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}