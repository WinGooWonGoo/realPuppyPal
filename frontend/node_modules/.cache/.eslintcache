[{"/Users/gogowon97/Documents/pyppypal/frontend/src/index.js":"1","/Users/gogowon97/Documents/pyppypal/frontend/src/reportWebVitals.js":"2","/Users/gogowon97/Documents/pyppypal/frontend/src/App.js":"3","/Users/gogowon97/Documents/pyppypal/frontend/src/Home.js":"4","/Users/gogowon97/Documents/pyppypal/frontend/src/result.js":"5","/Users/gogowon97/Documents/pyppypal/frontend/src/Behavior.js":"6","/Users/gogowon97/Documents/pyppypal/frontend/src/Start.js":"7","/Users/gogowon97/Documents/pyppypal/frontend/src/Info.js":"8","/Users/gogowon97/Documents/pyppypal/frontend/src/BehaviorDirect.js":"9","/Users/gogowon97/Documents/pyppypal/frontend/src/EditDogForm.js":"10","/Users/gogowon97/Documents/pyppypal/frontend/src/AddDogForm.js":"11","/Users/gogowon97/Documents/pyppypal/frontend/src/DeleteConfirmationModal.js":"12"},{"size":535,"mtime":1700727126568,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1700727126569,"results":"15","hashOfConfig":"14"},{"size":1215,"mtime":1700727126567,"results":"16","hashOfConfig":"14"},{"size":512,"mtime":1700727126568,"results":"17","hashOfConfig":"14"},{"size":1349,"mtime":1700727126569,"results":"18","hashOfConfig":"14"},{"size":5008,"mtime":1700808213523,"results":"19","hashOfConfig":"14"},{"size":841,"mtime":1700727126568,"results":"20","hashOfConfig":"14"},{"size":3787,"mtime":1700727126568,"results":"21","hashOfConfig":"14"},{"size":4710,"mtime":1700803296853,"results":"22","hashOfConfig":"14"},{"size":1999,"mtime":1700727126568,"results":"23","hashOfConfig":"14"},{"size":1746,"mtime":1700727126567,"results":"24","hashOfConfig":"14"},{"size":714,"mtime":1700727126568,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17pdm5v",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gogowon97/Documents/pyppypal/frontend/src/index.js",[],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/reportWebVitals.js",[],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/App.js",["63"],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/Home.js",["64","65"],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/result.js",[],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/Behavior.js",["66"],[],"import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './Behavior.css';\n\nconst Behavior = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const dog = location.state.dog; // URL에서 state를 통해 전달된 dog 객체를 가져옵니다.\n\n    const [selectedVideo, setSelectedVideo] = useState(null); // 사용자가 선택한 비디오 파일을 저장합니다.\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false); // 업로드 확인 모달의 표시 여부를 결정합니다.\n    const [uploading, setUploading] = useState(false); // 업로드 중 상태를 나타냅니다.\n\n    // 비디오 파일을 선택할 때 실행될 함수입니다.\n    const handleVideoUpload = (event) => {\n        setSelectedVideo(event.target.files[0]); // 선택된 파일을 상태에 저장합니다.\n        setShowConfirmationModal(true); // 확인 모달을 표시합니다.\n    };\n\n    // 비디오 파일을 서버로 업로드하는 함수입니다.\n    const uploadVideoToServer = async (file) => {\n        const formData = new FormData();\n        formData.append('file', file); // FormData 객체에 파일을 추가합니다.\n    \n        // 로컬 서버로의 요청을 시도하는 함수\n        const tryUploadToLocalServer = async () => {\n            const response = await fetch('/api/upload', {\n                method: 'POST',\n                mode: 'cors',\n                body: formData,\n            });\n            return response;\n        };\n    \n        // Cloud 서버로의 요청을 시도하는 함수\n        const tryUploadToCloudServer = async () => {\n            const response = await fetch('/cloudapi/upload', {\n                method: 'POST',\n                mode: 'cors',\n                body: formData,\n            });\n            return response;\n        };\n    \n        try {\n            let response = await tryUploadToLocalServer();\n            \n            // 로컬 서버 요청이 실패하면 Cloud 서버로 재시도\n            if (!response.ok) {\n                console.error('Upload to local server failed, trying cloud server');\n                response = await tryUploadToCloudServer();\n            }\n    \n            // Cloud 서버 요청도 실패하면 에러 처리\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const data = await response.json();\n            console.log('Upload successful:', data);\n            navigate('/Result', { state: { result: data } }); // 결과 페이지로 이동합니다.\n        } catch (error) {\n            console.error('Upload failed:', error);\n            alert(\"업로드 실패\");\n        }\n    };\n\n    // 업로드를 확인하는 버튼을 클릭했을 때 실행될 함수입니다.\n    const handleConfirmUpload = () => {\n        if (selectedVideo) {\n            uploadVideoToServer(selectedVideo);\n        }\n        setShowConfirmationModal(false); // 모달을 닫습니다.\n        setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n    };\n\n    // 업로드 모달을 닫을 때 실행될 함수입니다.\n    const closeConfirmationModal = () => {\n        setShowConfirmationModal(false); // 모달을 닫습니다.\n        setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n    };\n\n    return (\n        <div>\n            <header onClick={() => navigate('/Home')}>\n                <img alt=\"dog\" src=\"img/header.png\" />\n            </header>\n\n            <div className=\"video-upload\">\n                <p>{dog.name}의 영상을 업로드 해주세요</p>\n                <input id=\"videoUpload\" type=\"file\" accept=\"video/*\" onChange={handleVideoUpload} />\n                {selectedVideo && (\n                    <div>\n                        <video controls width=\"280\">\n                            <source src={URL.createObjectURL(selectedVideo)} type=\"video/mp4\" />\n                        </video>\n                        <button className=\"uploadbtn\" onClick={() => setShowConfirmationModal(true)}>Upload</button>\n                    </div>\n                )}\n            </div>\n\n            {showConfirmationModal && (\n                <div className=\"videoModal\">\n                    <div className=\"modal-cont\">\n                        <p className=\"first-element\"><b>Confirm Upload</b></p>\n                        <p className=\"first-element\">Do you want to upload the selected video?</p>\n                        <div className='confirmBtn'>\n                            <button className=\"second-element\" onClick={handleConfirmUpload}>Yes</button>\n                            <button className=\"third-element\" onClick={closeConfirmationModal}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {uploading && <div>Uploading...</div>}\n        </div>\n    );\n};\n\nexport default Behavior;\n","/Users/gogowon97/Documents/pyppypal/frontend/src/Start.js",["67"],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/Info.js",["68"],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/BehaviorDirect.js",[],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/EditDogForm.js",[],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/AddDogForm.js",[],[],"/Users/gogowon97/Documents/pyppypal/frontend/src/DeleteConfirmationModal.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"73","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"74","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"75","line":12,"column":23,"nodeType":"71","messageId":"72","endLine":12,"endColumn":35},{"ruleId":"69","severity":1,"message":"73","line":3,"column":17,"nodeType":"71","messageId":"72","endLine":3,"endColumn":25},{"ruleId":"69","severity":1,"message":"76","line":10,"column":8,"nodeType":"71","messageId":"72","endLine":10,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Start' is defined but never used.","'setUploading' is assigned a value but never used.","'Behavior' is defined but never used."]