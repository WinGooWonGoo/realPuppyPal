{"ast":null,"code":"var _jsxFileName = \"/Users/gogowon97/Documents/pyppypal/frontend/src/BehaviorDirect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BehaviorDirect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BehaviorDirect = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedVideo, setSelectedVideo] = useState(null); // 사용자가 선택한 비디오 파일을 저장합니다.\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false); // 업로드 확인 모달의 표시 여부를 결정합니다.\n\n  // 비디오 파일을 선택할 때 실행될 함수입니다.\n  const handleVideoUpload = event => {\n    setSelectedVideo(event.target.files[0]); // 선택된 파일을 상태에 저장합니다.\n    setShowConfirmationModal(true); // 확인 모달을 표시합니다.\n  };\n\n  // 비디오 파일을 서버로 업로드하는 함수입니다.\n  const uploadVideoToServer = async file => {\n    const formData = new FormData();\n    formData.append('file', file); // FormData 객체에 파일을 추가합니다.\n\n    try {\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Upload successful:', data);\n      navigate('/Result', {\n        state: {\n          result: data\n        }\n      }); // 결과 페이지로 이동합니다.\n    } catch (error) {\n      console.error('Upload failed:', error);\n      alert(\"업로드 실패\");\n    }\n  };\n\n  // 업로드를 확인하는 버튼을 클릭했을 때 실행될 함수입니다.\n  const handleConfirmUpload = () => {\n    if (selectedVideo) {\n      uploadVideoToServer(selectedVideo);\n    }\n    setShowConfirmationModal(false); // 모달을 닫습니다.\n    setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n  };\n\n  // 업로드 모달을 닫을 때 실행될 함수입니다.\n  const closeConfirmationModal = () => {\n    setShowConfirmationModal(false); // 모달을 닫습니다.\n    setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      onClick: () => navigate('/Home'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"dog\",\n        src: \"img/header.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC601\\uC0C1\\uC744 \\uC5C5\\uB85C\\uB4DC \\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"videoUpload\",\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleVideoUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), selectedVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          width: \"280\",\n          children: /*#__PURE__*/_jsxDEV(\"source\", {\n            src: URL.createObjectURL(selectedVideo),\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"uploadbtn\",\n          onClick: () => setShowConfirmationModal(true),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), showConfirmationModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoModal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-cont\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"first-element\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Confirm Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"first-element\",\n          children: \"Do you want to upload the selected video?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"second-element\",\n            onClick: handleConfirmUpload,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"third-element\",\n            onClick: closeConfirmationModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(BehaviorDirect, \"fBbeOUm1L+MBxD6F6DvDhJ7wLB4=\", false, function () {\n  return [useNavigate];\n});\n_c = BehaviorDirect;\nexport default BehaviorDirect;\nvar _c;\n$RefreshReg$(_c, \"BehaviorDirect\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","BehaviorDirect","_s","navigate","selectedVideo","setSelectedVideo","showConfirmationModal","setShowConfirmationModal","handleVideoUpload","event","target","files","uploadVideoToServer","file","formData","FormData","append","response","fetch","method","mode","headers","body","ok","Error","status","data","json","console","log","state","result","error","alert","handleConfirmUpload","closeConfirmationModal","children","onClick","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","className","id","type","accept","onChange","controls","width","URL","createObjectURL","_c","$RefreshReg$"],"sources":["/Users/gogowon97/Documents/pyppypal/frontend/src/BehaviorDirect.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BehaviorDirect.css';\n\nconst BehaviorDirect = () => {\n    const navigate = useNavigate();\n    const [selectedVideo, setSelectedVideo] = useState(null); // 사용자가 선택한 비디오 파일을 저장합니다.\n    const [showConfirmationModal, setShowConfirmationModal] = useState(false); // 업로드 확인 모달의 표시 여부를 결정합니다.\n\n    // 비디오 파일을 선택할 때 실행될 함수입니다.\n    const handleVideoUpload = (event) => {\n        setSelectedVideo(event.target.files[0]); // 선택된 파일을 상태에 저장합니다.\n        setShowConfirmationModal(true); // 확인 모달을 표시합니다.\n    };\n\n    // 비디오 파일을 서버로 업로드하는 함수입니다.\n    const uploadVideoToServer = async (file) => {\n        const formData = new FormData();\n        formData.append('file', file); // FormData 객체에 파일을 추가합니다.\n\n        try {\n            const response = await fetch('http://localhost:5000/api/upload', {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                  },\n                body: formData,\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const data = await response.json();\n            console.log('Upload successful:', data);\n            navigate('/Result', { state: { result: data } }); // 결과 페이지로 이동합니다.\n        } catch (error) {\n            console.error('Upload failed:', error);\n            alert(\"업로드 실패\");\n        }\n    };\n\n    // 업로드를 확인하는 버튼을 클릭했을 때 실행될 함수입니다.\n    const handleConfirmUpload = () => {\n        if (selectedVideo) {\n            uploadVideoToServer(selectedVideo);\n        }\n        setShowConfirmationModal(false); // 모달을 닫습니다.\n        setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n    };\n\n    // 업로드 모달을 닫을 때 실행될 함수입니다.\n    const closeConfirmationModal = () => {\n        setShowConfirmationModal(false); // 모달을 닫습니다.\n        setSelectedVideo(null); // 선택된 비디오를 초기화합니다.\n    };\n\n    return (\n        <div>\n            <header onClick={() => navigate('/Home')}>\n                <img alt=\"dog\" src=\"img/header.png\" />\n            </header>\n\n            <div className=\"video-upload\">\n                <p>영상을 업로드 해주세요</p>\n                <input id=\"videoUpload\" type=\"file\" accept=\"video/*\" onChange={handleVideoUpload} />\n                {selectedVideo && (\n                    <div>\n                        <video controls width=\"280\">\n                            <source src={URL.createObjectURL(selectedVideo)} type=\"video/mp4\" />\n                        </video>\n                        <button className=\"uploadbtn\" onClick={() => setShowConfirmationModal(true)}>Upload</button>\n                    </div>\n                )}\n            </div>\n\n            {showConfirmationModal && (\n                <div className=\"videoModal\">\n                    <div className=\"modal-cont\">\n                        <p className=\"first-element\"><b>Confirm Upload</b></p>\n                        <p className=\"first-element\">Do you want to upload the selected video?</p>\n                        <div className='confirmBtn'>\n                            <button className=\"second-element\" onClick={handleConfirmUpload}>Yes</button>\n                            <button className=\"third-element\" onClick={closeConfirmationModal}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default BehaviorDirect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}